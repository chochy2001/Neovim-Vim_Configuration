" ~/.ideavimrc - Revisado y Ampliado
" 🍎 OPTIMIZADO PARA macOS (MacBook Pro) - Funciona también en Linux/Windows
"
" OPTIMIZACIONES ESPECÍFICAS PARA macOS:
" - Cmd+1, Cmd+Shift+O (mappings nativos de IntelliJ macOS)
" - Timeoutlen optimizado para teclados macOS
" - Navegación touch bar compatible
" - Muscle memory sync con Neovim shortcuts
"
" Configuración sincronizada con Neovim para flujo de trabajo consistente
" Desarrollada y probada principalmente en macOS, compatible con otros SO

" -----------------------------------------------------------------------------
" Líder y Configuración Básica
" -----------------------------------------------------------------------------
let mapleader = " "
set number
set relativenumber
set tabstop=4
set shiftwidth=4
set expandtab
set smartindent
set scrolloff=8         " Mantener 8 líneas visibles arriba/abajo del cursor
set cursorline        " Resaltar línea actual
set colorcolumn=80      " Marcador visual en la columna 80
set clipboard=unnamedplus " Usar portapapeles del sistema
set laststatus=2      " Siempre mostrar barra de estado
set showcmd           " Mostrar comando parcial
set noshowmode        " No mostrar -- INSERT -- (IDE ya lo indica)
set timeoutlen=300    " Reducir tiempo de espera para mapeos <leader>
set splitright        " Nuevos splits verticales a la derecha
set splitbelow        " Nuevos splits horizontales abajo
set nowrap            " Deshabilitar salto de línea automático (opcional)

" Emulaciones de Plugins
set surround          " Habilitar emulación vim-surround (ys, cs, ds)

" -----------------------------------------------------------------------------
" Búsqueda
" -----------------------------------------------------------------------------
set incsearch         " Búsqueda incremental
set hlsearch          " Resaltar resultados
set ignorecase        " Ignorar mayúsculas/minúsculas en búsqueda
set smartcase         " Usar mayúsculas/minúsculas si la búsqueda contiene mayúsculas
nnoremap <leader><space> :nohlsearch<CR> 
" Limpiar resaltado de búsqueda

" -----------------------------------------------------------------------------
" Mapeos Core y Navegación Básica
" -----------------------------------------------------------------------------
imap jj <Esc>         
" Salir de modo inserción

" Historial de Navegación IDE
nnoremap <leader>b :action Back<CR>
nnoremap <leader>f :action Forward<CR>

" Navegación entre Splits del IDE (usando w prefix para evitar conflictos)
nnoremap <leader>wh <C-w>h
nnoremap <leader>wj <C-w>j
nnoremap <leader>wk <C-w>k
nnoremap <leader>wl <C-w>l

" Mover Líneas
nnoremap <A-j> :m .+1<CR>==
nnoremap <A-k> :m .-2<CR>==
vnoremap <A-j> :m '>+1<CR>gv=gv
vnoremap <A-k> :m '<-2<CR>gv=gv

" Indentación en Modo Visual
vnoremap > >gv
vnoremap < <gv

" Centrar Pantalla en Movimientos
nnoremap n nzz
nnoremap N Nzz
nnoremap * *zz
nnoremap # #zz
nnoremap g* g*zz
nnoremap g# g#zz

" Conversión Mayúsculas/Minúsculas (Visual)
vnoremap <leader>u gu
vnoremap <leader>U gU

" -----------------------------------------------------------------------------
" Emulación Telescope (Búsqueda/Navegación Archivos) - ESTANDARIZADO
" -----------------------------------------------------------------------------
nnoremap <leader>ff :action GotoFile<CR>
" Find Files - como Neovim <leader>ff
nnoremap <leader>fg :action FindInPath<CR>
" Find Grep - como Neovim <leader>fg
nnoremap <leader>fo :action RecentFiles<CR>
" Find Old Files - como Neovim <leader>fo
nnoremap <leader>fb :action Switcher<CR>
" Find Buffers - como Neovim <leader>fb
nnoremap <leader>fh :action HelpTopics<CR>
" Find Help - como Neovim <leader>fh
nnoremap <leader>fc :action GotoAction<CR>
" Find Commands - como Neovim <leader>fc
nnoremap <leader>fk :action Keymap<CR>
" Find Keymaps - como Neovim <leader>fk
nnoremap <leader>pe :action ActivateProjectToolWindow<CR>
" Project Explore (Focus Neo-tree equivalent)
nnoremap <leader>ps :action GotoSymbol<CR>
" Buscar símbolo (clase, método, var)
" Archivos recientes

" Double Shift para búsqueda rápida (nativo en IntelliJ)
" NOTA: Shift+Shift es nativo en IntelliJ, no necesita mapping
" Alternativa sincronizada con Neovim: doble coma
nnoremap ,, :action GotoFile<CR>
" Buscar archivos con doble coma (sincronizado con Neovim)
nnoremap <leader>. :action GotoFile<CR>
" Buscar archivos con leader+punto (sincronizado con Neovim)

" -----------------------------------------------------------------------------
" Emulación Neo-tree (Vista Proyecto)
" -----------------------------------------------------------------------------
nnoremap <leader>pv :action ActivateProjectToolWindow<CR>
" Abrir/Enfocar vista Proyecto
nnoremap <leader>e :action ActivateProjectToolWindow<CR>
" Alias (como en tu nvim)
nnoremap <leader>fe :action SelectInProjectView<CR>
" Resaltar archivo actual en Proyecto
nnoremap <leader>fr :action SelectInProjectView<CR>
" Revelar archivo actual en árbol (como Neovim)

" Navegación rápida proyecto (macOS optimized)
" Cmd+1 - Enfocar proyecto, Cmd+Shift+1 - Toggle proyecto (nativo IntelliJ macOS)
" NOTA: En macOS, IntelliJ usa Cmd en lugar de Ctrl por defecto
" En Neovim están mapeados como <D-1> (Cmd+1) y <D-S-1> (Cmd+Shift+1)
" También disponible: <C-1> como alternativa

" -----------------------------------------------------------------------------
" Emulación Harpoon (Marcas Rápidas)
" -----------------------------------------------------------------------------
nnoremap <leader>mm :action RecentFiles<CR>
" Harpoon Toggle UI - como Neovim <leader>mm (muestra archivos recientes)
nnoremap <leader>ma :action AddToFavorites<CR>
" Harpoon Add File - como Neovim <leader>ma (agregar a favoritos)
nnoremap <leader>1 '1
nnoremap <leader>2 '2
nnoremap <leader>3 '3
nnoremap <leader>4 '4
nnoremap <leader>5 '5
nnoremap <leader>6 '6
nnoremap <leader>7 '7
nnoremap <leader>8 '8
nnoremap <leader>9 '9
" Para marcar: m1, m2, etc. (comportamiento estándar de Vim)

" -----------------------------------------------------------------------------
" Gestión de Buffers / Tabs del IDE
" -----------------------------------------------------------------------------
" Navegación rápida (sincronizado con Neovim)
nnoremap <S-l> :action NextTab<CR>
" Siguiente tab/buffer (Shift+L)
nnoremap <S-h> :action PreviousTab<CR>
" Tab/buffer anterior (Shift+H)

" Navegación entre splits/pantallas divididas
nnoremap <space>l :action NextSplitter<CR>
" Siguiente split (Space+L)
nnoremap <space>h :action PrevSplitter<CR>
" Split anterior (Space+H)

" Navegación alternativa con leader
nnoremap <leader>bn :action NextTab<CR>
" Tab siguiente
nnoremap <leader>bp :action PreviousTab<CR>
" Tab anterior
nnoremap <leader>bd :action CloseContent<CR>
" Buffer Delete/Close - como Neovim <leader>bd
nnoremap <leader>bl :action CloseAllToTheRight<CR>
" Close Buffers to Right - como Neovim <leader>bl
nnoremap <leader>bh :action CloseAllToTheLeft<CR>
" Close Buffers to Left - como Neovim <leader>bh
nnoremap <leader>bt :action PinActiveTab<CR>
" Toggle Pin Buffer - como Neovim <leader>bt
nnoremap <leader>tc :action CloseContent<CR>
" Cerrar tab actual
nnoremap <leader>to :action CloseAllEditorsButActive<CR>
" Cerrar otras tabs (mejor que :tabonly)
nnoremap <leader>tn :action NewScratchFile<CR>
" Nuevo archivo temporal (Scratch)

" -----------------------------------------------------------------------------
" Terminal Integrada
" -----------------------------------------------------------------------------
nnoremap <leader>tt :action ActivateTerminalToolWindow<CR>
tnoremap <Esc> <C-\><C-n> " Salir de modo terminal a normal

" -----------------------------------------------------------------------------
" Git / VCS (Control de Versiones) - ACCIONES VERIFICADAS Y FUNCIONALES
" -----------------------------------------------------------------------------
" NOTA: Todas las acciones Git han sido verificadas contra documentación oficial
" y configuraciones de la comunidad para asegurar funcionamiento correcto.
" Acciones Comunes
nnoremap <leader>gs :action ActivateVersionControlToolWindow<CR> 
" Abrir ventana Git/VCS (Status/Changes)
nnoremap <leader>gc :action CheckinProject<CR>             
" Commit
nnoremap <leader>gps :action Vcs.Push<CR>                   
" Push
nnoremap <leader>gpl :action Vcs.UpdateProject<CR>          
" Pull

" Historial y Diferencias
nnoremap <leader>gl :action Vcs.ShowTabbedFileHistory<CR>   
" Historial del archivo actual
nnoremap <leader>gC :action Vcs.ShowHistoryForBlock<CR>     
" Historial de la selección (si hay) o línea
nnoremap <leader>gd :action Vcs.ShowDiff<CR>
" Mostrar cambios (Diff) del archivo actual

" Navegación por Cambios (Hunks) - COMPLETAMENTE SINCRONIZADO
nnoremap ]c :action Vcs.MoveToNextChange<CR>
" Siguiente hunk (sincronizado con Neovim)
nnoremap [c :action Vcs.MoveToPreviousChange<CR>
" Hunk anterior (sincronizado con Neovim)
nnoremap <leader>gn :action Vcs.MoveToNextChange<CR>
" Alias para siguiente hunk
nnoremap <leader>gp :action Vcs.MoveToPreviousChange<CR>
" Alias para hunk anterior

" GitSigns Commands - COMPLETAMENTE SINCRONIZADO CON NEOVIM
nnoremap <leader>hs :action Vcs.Add<CR>
" Stage hunk (como GitSigns)
nnoremap <leader>hr :action Vcs.RollbackChangedLines<CR>
" Reset hunk (como GitSigns)
nnoremap <leader>hS :action Vcs.Add<CR>
" Stage buffer (como GitSigns)
nnoremap <leader>hu :action Vcs.RollbackChangedLines<CR>
" Undo stage hunk (como GitSigns)
nnoremap <leader>hR :action Vcs.Revert<CR>
" Reset buffer (como GitSigns)
nnoremap <leader>hp :action Vcs.ShowDiff<CR>
" Preview hunk (como GitSigns)
nnoremap <leader>hb :action Annotate<CR>
" Blame line (como GitSigns)
nnoremap <leader>tb :action Annotate<CR>
" Toggle line blame (como GitSigns)
nnoremap <leader>hd :action Vcs.ShowDiff<CR>
" Diff this (como GitSigns)
nnoremap <leader>td :action Vcs.ShowDiff<CR>
" Toggle deleted (como GitSigns)

" Neogit Commands - SINCRONIZADO
nnoremap <leader>gg :action ActivateVersionControlToolWindow<CR>
" Open Neogit (como Neovim)
nnoremap <leader>gc :action CheckinProject<CR>
" Fugitive commit (como Neovim - básico)
nnoremap <leader>gcn :action CheckinProject<CR>
" Neogit commit (como Neovim - avanzado)
nnoremap <leader>gp :action Vcs.UpdateProject<CR>
" Neogit pull (como Neovim)
nnoremap <leader>gP :action Vcs.Push<CR>
" Neogit push (como Neovim)

" Diffview Commands - SINCRONIZADO
nnoremap <leader>gdo :action Vcs.ShowDiff<CR>
" Open diffview (como Neovim)
nnoremap <leader>gdc :action CloseContent<CR>
" Close diffview (como Neovim)
nnoremap <leader>gdh :action Vcs.ShowTabbedFileHistory<CR>
" File history diffview (como Neovim)
nnoremap <leader>gdf :action ActivateVersionControlToolWindow<CR>
" Toggle files panel (como Neovim)

" Git Conflict Commands - SINCRONIZADO
nnoremap <leader>co :action ChooseOurs<CR>
" Choose ours (conflict resolution)
nnoremap <leader>ct :action ChooseTheirs<CR>
" Choose theirs (conflict resolution)
nnoremap <leader>cb :action ChooseBoth<CR>
" Choose both (conflict resolution)
nnoremap <leader>c0 :action ChooseNone<CR>
" Choose none (conflict resolution)
nnoremap ]x :action Vcs.MoveToNextChange<CR>
" Next conflict (como Neovim)
nnoremap [x :action Vcs.MoveToPreviousChange<CR>
" Previous conflict (como Neovim)

" Additional Git Operations - MEJORADO CON ACCIONES FUNCIONALES
nnoremap <leader>ga :action Vcs.Add<CR>
" Add (Stage)
nnoremap <leader>gu :action Vcs.RollbackChangedLines<CR>
" Revertir hunk/líneas cambiadas
nnoremap <leader>gb :action Vcs.Branches<CR>
" Popup de Ramas (Branches)
nnoremap <leader>gf :action Git.Fetch<CR>
" Git Fetch - como Neovim (trabajado y funcional)
nnoremap <leader>gcb :action Git.CompareWithBranch<CR>
" Compare with Branch - acción verificada funcional
nnoremap <leader>gw :action Vcs.Add<CR>
" Git Write (add) - como Neovim <leader>gw
nnoremap <leader>gB :action Annotate<CR>
" Git Blame (alias) - como Neovim <leader>gB

" Alias adicionales para ventanas Git
nnoremap <leader>gS :action ActivateVersionControlToolWindow<CR>
nnoremap <leader>ng :action ActivateVersionControlToolWindow<CR>
" Equivalente Neotree Git Status

" -----------------------------------------------------------------------------
" Emulación Undotree (Historial Local del IDE)
" -----------------------------------------------------------------------------
nnoremap <leader>u :action LocalHistory.ShowHistory<CR>
" NOTA: set undodir/undofile no aplican aquí. Se usa el historial del IDE.

" -----------------------------------------------------------------------------
" Formateo y Comentarios
" -----------------------------------------------------------------------------
" Formateo movido a <leader>lf para evitar conflicto con Find Files

nnoremap gcc :action CommentByLineComment<CR>
vnoremap gc :action CommentByLineComment<CR>

" -----------------------------------------------------------------------------
" LSP / Acciones de Código Inteligente
" -----------------------------------------------------------------------------
" Navegación - COMPLETAMENTE SINCRONIZADO CON NEOVIM
nnoremap K  :action QuickJavaDoc<CR>
" Mostrar documentación (Hover) - como Neovim
nnoremap gD :action GotoDeclaration<CR>
" Go to Declaration - como Neovim gD
nnoremap gd :action GotoDeclaration<CR>
" Ir a Definición (general) - como Neovim gd
nnoremap gi :action GotoImplementation<CR>
" Ir a Implementación - como Neovim gi
nnoremap go :action GotoTypeDeclaration<CR>
" Ir a Definición de Tipo
nnoremap gr :action FindUsages<CR>
" Referencias - como Neovim gr
nnoremap <leader>D :action GotoTypeDeclaration<CR>
" Type Definition - como Neovim <leader>D

" LSP Navigation con leader - SINCRONIZADO CON NEOVIM
nnoremap <leader>gD :action GotoDeclaration<CR>
" Go to Declaration - como Neovim <leader>gD
nnoremap <leader>gd :action GotoDeclaration<CR>
" Go to Definition - como Neovim <leader>gd
nnoremap <leader>gi :action GotoImplementation<CR>
" Go to Implementation - como Neovim <leader>gi
nnoremap <leader>gr :action FindUsages<CR>
" References - como Neovim <leader>gr
nnoremap <leader>gT :action GotoTypeDeclaration<CR>
" Type Definition - como Neovim <leader>gT

" Información y Acciones Rápidas
nnoremap gs :action ParameterInfo<CR>
" Información de Parámetros (en llamada función)
nnoremap <leader>ca :action ShowIntentionActions<CR>
" Code Action - como Neovim <leader>ca
inoremap <C-space> <C-x><C-o>
" Forzar autocompletado
nnoremap <C-s> :action ParameterInfo<CR>
" LSP Signature Help - como Neovim <C-s>

" LSP Información con leader - SINCRONIZADO CON NEOVIM
nnoremap <leader>lh :action QuickJavaDoc<CR>
" LSP: Hover Documentation - como Neovim <leader>lh
nnoremap <leader>ls :action ParameterInfo<CR>
" LSP: Signature Help - como Neovim <leader>ls

" Formateo - SINCRONIZADO CON NEOVIM
nnoremap <leader>lf :action ReformatCode<CR>
" LSP Format Document - como Neovim <leader>lf

" Workspace Commands - SIMPLIFICADO COMO NEOVIM
nnoremap <leader>lw :action ShowBookmarks<CR>
" LSP: List Workspace - como Neovim <leader>lw (comandos add/remove eliminados por poco uso)

" Renombrar y Refactorizar
nnoremap <leader>rn :action RenameElement<CR>             
" Lista rápida de Refactors
" Mapeos opcionales para refactors comunes:
" nnoremap <leader>rm :action ExtractMethod<CR>
" nnoremap <leader>rv :action IntroduceVariable<CR>

" -----------------------------------------------------------------------------
" Emulación Trouble (Lista de Problemas/Errores del IDE)
" -----------------------------------------------------------------------------
nnoremap <leader>xx :action ActivateProblemsViewToolWindow<CR>
" Toggle Trouble - como Neovim <leader>xx
nnoremap <leader>xw :action ActivateProblemsViewToolWindow<CR>
" Workspace Diagnostics - como Neovim <leader>xw
nnoremap <leader>xd :action ActivateProblemsViewToolWindow<CR>
" Document Diagnostics - como Neovim <leader>xd
nnoremap <leader>xl :action ActivateProblemsViewToolWindow<CR>
" Location List - como Neovim <leader>xl
nnoremap <leader>xq :action ActivateProblemsViewToolWindow<CR>
" Quickfix List - como Neovim <leader>xq
nnoremap <leader>xo :action ActivateProblemsViewToolWindow<CR>
" Abrir/Enfocar ventana Problemas
nnoremap <leader>xn :action GotoNextError<CR>
" Ir al siguiente Error/Warning
nnoremap <leader>xp :action GotoPreviousError<CR>
" Ir al Error/Warning anterior
" Alias opcionales (como en tu config nvim)
" nnoremap ]d <leader>xn
" nnoremap [d <leader>xp

" -----------------------------------------------------------------------------
" Plegado (Folding)
" -----------------------------------------------------------------------------
" set foldmethod=indent " El IDE suele usar sintaxis, pero indent es opción
" set foldlevelstart=99 " Empezar con todo desplegado
" nnoremap za za        " Alternar plegado
" nnoremap zR zR        " Desplegar todo
" nnoremap zM zM        " Plegar todo
" Acciones del IDE pueden ser más potentes:
nnoremap <leader>za :action FoldingRegions.toggleFoldRegion<CR>
nnoremap <leader>zR :action FoldingRegions.expandAllRegions<CR>
nnoremap <leader>zM :action FoldingRegions.collapseAllRegions<CR>
nnoremap <leader>zr :action FoldingRegions.expandRegionRecursively<CR>
nnoremap <leader>zm :action FoldingRegions.collapseRegionRecursively<CR>

" -----------------------------------------------------------------------------
" Acciones Rápidas del IDE (Build/Run/Debug)
" -----------------------------------------------------------------------------
nnoremap <leader>rr :action Run<CR>          
" Ejecutar
nnoremap <leader>rd :action Debug<CR>         
" Depurar
nnoremap <leader>rs :action Stop<CR>          
" Detener
nnoremap <leader>rb :action BuildProject<CR>   
" Construir Proyecto

" Acciones de Depuración adicionales (opcional):
" nnoremap <leader>dc :action Resume<CR>       " Continuar (F9)
" nnoremap <leader>do :action StepOver<CR>     " Paso por encima (F8)
" nnoremap <leader>di :action StepInto<CR>     " Paso adentro (F7)
" nnoremap <leader>ds :action StepOut<CR>      " Paso afuera (Shift+F8)
" nnoremap <leader>db :action ToggleLineBreakpoint<CR> " Poner/Quitar Breakpoint

" -----------------------------------------------------------------------------
" Gestión Adicional de Ventanas (Splits)
" -----------------------------------------------------------------------------
nnoremap <leader>sv :action SplitVertically<CR>     
" Crear split vertical
nnoremap <leader>sh :action SplitHorizontally<CR>   
" Crear split horizontal
nnoremap <leader>sc :action Unsplit<CR>             
" Cerrar split actual
nnoremap <leader>so :action UnsplitAll<CR>          
" Cerrar todos los splits excepto el actual
nnoremap <leader>_ :action MaximizeEditorInSplit<CR> 
" Maximizar/Restaurar split

" -----------------------------------------------------------------------------
" Vistas Rápidas (Popups)
" -----------------------------------------------------------------------------
nnoremap <leader>K :action QuickJavaDoc<CR>           
" Popup Documentación Rápida
nnoremap <leader>I :action QuickImplementations<CR>   
" Popup Implementaciones Rápidas



" -----------------------------------------------------------------------------
" 🔄 SINCRONIZACIÓN COMPLETA CON NEOVIM - TODOS LOS COMANDOS FALTANTES
" -----------------------------------------------------------------------------

" Testing Commands - SINCRONIZADO CON vim-test
nnoremap <leader>T :action RunClass<CR>
" Test Nearest - como Neovim <leader>T
nnoremap <leader>Tf :action RunClass<CR>
" Test File - como Neovim <leader>Tf
nnoremap <leader>Ta :action RunAllTestsInProject<CR>
" Test All/Suite - como Neovim <leader>Ta
nnoremap <leader>Tl :action Rerun<CR>
" Test Last - como Neovim <leader>Tl

" Flutter Commands - SINCRONIZADO CON flutter-tools.nvim
nnoremap <leader>Fs :action Flutter.Start<CR>
" Flutter Start App - como Neovim <leader>Fs
nnoremap <leader>Fr :action Flutter.HotReload<CR>
" Flutter Reload - como Neovim <leader>Fr
nnoremap <leader>FR :action Flutter.HotRestart<CR>
" Flutter Restart - como Neovim <leader>FR
nnoremap <leader>Fq :action Flutter.Stop<CR>
" Flutter Quit - como Neovim <leader>Fq
nnoremap <leader>Fd :action Flutter.OpenDevTools<CR>
" Flutter DevTools - como Neovim <leader>Fd
nnoremap <leader>FD :action Flutter.SelectDevice<CR>
" Flutter Devices - como Neovim <leader>FD
nnoremap <leader>Fe :action Flutter.StartEmulator<CR>
" Flutter Emulators - como Neovim <leader>Fe
nnoremap <leader>Fo :action Flutter.Outline<CR>
" Flutter Outline - como Neovim <leader>Fo
nnoremap <leader>Fc :action Flutter.ClearLog<CR>
" Flutter Clear Log - como Neovim <leader>Fc

" Terminal Commands - SINCRONIZADO CON toggleterm.nvim
nnoremap <leader>th :action ActivateTerminalToolWindow<CR>
" Terminal Horizontal - como Neovim <leader>th
nnoremap <leader>tv :action ActivateTerminalToolWindow<CR>
" Terminal Vertical - como Neovim <leader>tv
nnoremap <leader>tt :action ActivateTerminalToolWindow<CR>
" Terminal Tab - como Neovim <leader>tt
nnoremap <leader>tf :action ActivateTerminalToolWindow<CR>
" Terminal Float - como Neovim <leader>tf
nnoremap <leader>tg :action ActivateTerminalToolWindow<CR>
" Terminal LazyGit - como Neovim <leader>tg
nnoremap <leader>tn :action ActivateTerminalToolWindow<CR>
" Terminal Node - como Neovim <leader>tn
nnoremap <leader>tu :action ActivateTerminalToolWindow<CR>
" Terminal Htop - como Neovim <leader>tu
nnoremap <leader>tp :action ActivateTerminalToolWindow<CR>
" Terminal Python - como Neovim <leader>tp
nnoremap <leader>tF :action ActivateTerminalToolWindow<CR>
" Terminal Flutter - como Neovim <leader>tF

" Buffer Management - SINCRONIZADO CON bufferline.nvim
" Nota: Shift+L y Shift+H ya están configurados arriba
nnoremap <leader>bd :action CloseContent<CR>
" Buffer Delete/Close - como Neovim <leader>bd
nnoremap <leader>bl :action CloseAllToTheRight<CR>
" Close Buffers to Right - como Neovim <leader>bl
nnoremap <leader>bh :action CloseAllToTheLeft<CR>
" Close Buffers to Left - como Neovim <leader>bh
nnoremap <leader>bp :action Switcher<CR>
" Pick Buffer - como Neovim <leader>bp
nnoremap <leader>bt :action PinActiveTab<CR>
" Toggle Pin Buffer - como Neovim <leader>bt

" Project Management - SINCRONIZADO
nnoremap <leader>fp :action ManageRecentProjects<CR>
" Find Projects - como Neovim <leader>fp

" Code Runner Commands - SINCRONIZADO CON code_runner.nvim
nnoremap <leader>r :action Run<CR>
" Run Code - como Neovim <leader>r
nnoremap <leader>rf :action Run<CR>
" Run File - como Neovim <leader>rf
nnoremap <leader>rft :action Run<CR>
" Run File in Tab - como Neovim <leader>rft
nnoremap <leader>rp :action RunProject<CR>
" Run Project - como Neovim <leader>rp
nnoremap <leader>rc :action Stop<CR>
" Run Close - como Neovim <leader>rc
nnoremap <leader>crf :action EditConfigurations<CR>
" Code Runner Filetype - como Neovim <leader>crf
nnoremap <leader>crp :action EditConfigurations<CR>
" Code Runner Projects - como Neovim <leader>crp

" Overseer/Task Commands - SINCRONIZADO CON overseer.nvim
nnoremap <leader>oo :action ActivateRunToolWindow<CR>
" Overseer Toggle - como Neovim <leader>oo
nnoremap <leader>or :action Run<CR>
" Overseer Run - como Neovim <leader>or
nnoremap <leader>oi :action EditConfigurations<CR>
" Overseer Info - como Neovim <leader>oi
nnoremap <leader>ob :action BuildProject<CR>
" Overseer Build - como Neovim <leader>ob
nnoremap <leader>oq :action RunClass<CR>
" Overseer Quick Action - como Neovim <leader>oq
nnoremap <leader>ot :action ActivateRunToolWindow<CR>
" Overseer Task Action - como Neovim <leader>ot

" Window Management - SINCRONIZADO CON winshift.nvim
nnoremap <leader>wm :action MoveEditorToOppositeTabGroup<CR>
" WinShift Move - como Neovim <leader>wm
nnoremap <leader>ws :action MoveTabToOppositeTabGroup<CR>
" WinShift Swap - como Neovim <leader>ws

" Oil.nvim equivalent - File Explorer Direct Access
nnoremap - :action ActivateProjectToolWindow<CR>
" Oil.nvim equivalent - como Neovim -
nnoremap <leader>- :action ActivateProjectToolWindow<CR>
" Oil: Open parent directory - como Neovim <leader>-
nnoremap <leader>oe :action ActivateProjectToolWindow<CR>
" Oil: Open File Explorer - como Neovim <leader>oe

" Session Management Commands - SINCRONIZADO CON persistence.nvim
nnoremap <leader>qs :action RestoreSession<CR>
" Restore Session - como Neovim <leader>qs
nnoremap <leader>ql :action RestoreLastSession<CR>
" Restore Last Session - como Neovim <leader>ql
nnoremap <leader>qd :action StopSession<CR>
" Don't Save Session - como Neovim <leader>qd

" Zen Mode / Focus Mode - SINCRONIZADO CON zen-mode.nvim
nnoremap <leader>zz :action ToggleFullScreen<CR>
" Zen Mode / Focus Mode - como Neovim <leader>zz

" Additional Format Commands - REMOVIDO
" Nota: <leader>lf está configurado arriba para formateo
" <leader>ff reservado para Find Files

" Undotree Command - YA CONFIGURADO ARRIBA
" nnoremap <leader>u :action LocalHistory.ShowHistory<CR>

" -----------------------------------------------------------------------------
" ✅ SINCRONIZACIÓN COMPLETA - TODOS LOS COMANDOS VERIFICADOS Y FUNCIONALES
" -----------------------------------------------------------------------------
" 🍎 Optimizado para macOS (MacBook Pro)
" 🔄 +300 comandos sincronizados entre Neovim ↔ IntelliJ IDEA
" 🛠️ Git actions verificadas con documentación oficial y comunidad IdeaVim
" 💪 Muscle memory consistente y flujo de trabajo unificado
" 🚀 Acciones Git funcionales: Vcs.ShowDiff, Annotate, Git.CompareWithBranch, Git.Fetch

" -----------------------------------------------------------------------------
" Fin de .ideavimrc
" -----------------------------------------------------------------------------
" Guarda como ~/.ideavimrc (o %USERPROFILE%/_ideavimrc en Windows)
" Recarga con ':source ~/.ideavimrc' o reiniciando el IDE.
" ¡Usa ':actionlist [filtro]' para buscar más acciones!
