" ~/.ideavimrc
" Versión 4: Usando nombres de acción verificados de actionlist para macOS

" -----------------------------------------------------------------------------
" IMPORTANTE: Cómo encontrar nombres de acción si algo falla:
" 1. En modo Normal, escribe: :actionlist [palabra_clave]
"    (ej. :actionlist file, :actionlist git log, :actionlist project view)
" 2. Busca el nombre de acción correcto en la lista y úsalo abajo.
" -----------------------------------------------------------------------------

" -----------------------------------------------------------------------------
" Líder y Configuración Básica
" -----------------------------------------------------------------------------
let mapleader = " "
set surround      " Habilitar emulación de vim-surround (ys, cs, ds)
set number
set relativenumber
set tabstop=4
set shiftwidth=4
set expandtab
set smartindent
set termguicolors
set clipboard=unnamedplus
set scrolloff=8
set cursorline
set colorcolumn=80
set laststatus=2
set showcmd
set noshowmode

" -----------------------------------------------------------------------------
" Mapeos Core y Navegación Básica
" -----------------------------------------------------------------------------
" Salir de modo inserción
imap jj <Esc>

" Mostrar Estructura del Archivo (Nativo: Cmd+F12)
" Acción confirmada en actionlist
nnoremap <leader>ot :action FileStructurePopup<CR>

" Ir atrás/adelante en historial de navegación (Funcionando)
nnoremap <leader>b :action Back<CR>
nnoremap <leader>f :action Forward<CR>

" -----------------------------------------------------------------------------
" Búsqueda / Reemplazo de Telescope
" -----------------------------------------------------------------------------
" Buscar Archivos en Proyecto (Nativo: Cmd+Shift+O)
" Acción 'GotoFile' confirmada en actionlist. Si no funciona,
" revisa la indexación del IDE o busca conflictos.
nnoremap <leader>pf :action GotoFile<CR>
" Buscar en Archivos (Nativo: Cmd+Shift+F) - Funciona según feedback
nnoremap <leader>pg :action FindInPath<CR>

" -----------------------------------------------------------------------------
" Ventana de Proyecto / Reemplazo de Neotree
" -----------------------------------------------------------------------------
" Activar/Enfocar/Ocultar Ventana de Proyecto (Nativo: Cmd+1)
" Acción confirmada en actionlist. Debería alternar visibilidad.
nnoremap <leader>pv :action ActivateProjectToolWindow<CR>

" Mostrar archivos recientes (Nativo: Cmd+E)
" Acción confirmada en actionlist.
nnoremap <leader>rf :action RecentFiles<CR>

" -----------------------------------------------------------------------------
" Harpoon (Sustituido por Marcas - Funcionando)
" -----------------------------------------------------------------------------
nnoremap <leader>1 '1
nnoremap <leader>2 '2
nnoremap <leader>3 '3
nnoremap <leader>4 '4
nnoremap <leader>5 '5
nnoremap <leader>6 '6
nnoremap <leader>7 '7
nnoremap <leader>8 '8
nnoremap <leader>9 '9

" -----------------------------------------------------------------------------
" Buffers / Tabs (Funcionando)
" -----------------------------------------------------------------------------
nnoremap <leader>bn :action NextTab<CR>
nnoremap <leader>bp :action PreviousTab<CR>

" -----------------------------------------------------------------------------
" Terminal (Funcionando, Esc sale de modo, no cierra ventana)
" -----------------------------------------------------------------------------
" Acción confirmada en actionlist
nnoremap <leader>t :action ActivateTerminalToolWindow<CR>
" Salir del *modo* terminal (regresa al editor, no cierra la ventana)
tnoremap <Esc> <C-\><C-n>

" -----------------------------------------------------------------------------
" Git / VCS
" IMPORTANTE: Verifica que Git funcione nativamente en el IDE (Cmd+9, Menú Git)
" -----------------------------------------------------------------------------
" Mostrar historial de Git (Log) - Usando Vcs.ShowTabbedFileHistory
" Busca con ':actionlist history' o ':actionlist log' si falla.
nnoremap <leader>gl :action Vcs.ShowTabbedFileHistory<CR>
" Commit (Cmd+K) - Funciona según feedback, acción confirmada
nnoremap <leader>gc :action CheckinProject<CR>
" Push (Cmd+Shift+K) - Funciona según feedback, acción confirmada
nnoremap <leader>gps :action Vcs.Push<CR>
" Pull (Cmd+T) - Funciona según feedback, acción confirmada
nnoremap <leader>gpl :action Vcs.UpdateProject<CR>

" -----------------------------------------------------------------------------
" Historial Local (Reemplazo de Undotree)
" -----------------------------------------------------------------------------
" Mostrar Historial Local - Acción confirmada
nnoremap <leader>u :action LocalHistory.ShowHistory<CR>

" -----------------------------------------------------------------------------
" Formateo (Funcionando)
" -----------------------------------------------------------------------------
nnoremap <leader>fj :action ReformatCode<CR>
vnoremap <leader>fj :action ReformatCode<CR>

" -----------------------------------------------------------------------------
" LSP Keymaps
" Acciones confirmadas en actionlist. Su funcionamiento depende del contexto.
" -----------------------------------------------------------------------------
" K -> Hover (Default)
" gd -> Definición (Default)
" gD -> Declaración (Default)

" Ir a Implementación(es) - Acción confirmada
nnoremap gi :action GotoImplementation<CR>
" Ir a definición de Tipo - Acción confirmada
nnoremap go :action GotoTypeDeclaration<CR>
" Buscar usos/referencias (Option+F7) - Funciona según feedback, acción confirmada
nnoremap gr :action FindUsages<CR>
" Mostrar ayuda de signatura/parámetros (Nativo: Cmd+P) - Acción confirmada
nnoremap gs :action ParameterInfo<CR>

" Renombrar (Shift+F6) - Funciona según feedback, acción confirmada
nnoremap <leader>rn :action RenameElement<CR>
" Acciones de Código (Option+Enter) - Funciona según feedback, acción confirmada
nnoremap <leader>ca :action ShowIntentionActions<CR>

" Mostrar Parámetros en modo Inserción (Nativo: Cmd+P)
" Método <Esc>...a con acción confirmada. ¡Cuidado con espacios extra!
inoremap <leader>pi :action ParameterInfo<CR>

" -----------------------------------------------------------------------------
" Comentarios (Funcionando)
" -----------------------------------------------------------------------------
" Acción confirmada
nnoremap gcc :action CommentByLineComment<CR>
vnoremap gc :action CommentByLineComment<CR>




" Nuevas implementaciones
" " -----------------------------------------------------------------------------
" Mejoras de Búsqueda
" -----------------------------------------------------------------------------
set incsearch     " Muestra coincidencias mientras buscas
set hlsearch      " Resalta todas las coincidencias
set ignorecase    " Ignora mayúsculas/minúsculas por defecto
set smartcase     " Sensible a mayúsculas si el patrón las incluye
" Limpiar resaltado de búsqueda con <leader><space>
nnoremap <leader><space> :nohlsearch<CR>
"
" Navegación entre splits (si usas ventanas divididas)
nnoremap <leader>h <C-w>h
nnoremap <leader>j <C-w>j
nnoremap <leader>k <C-w>k
nnoremap <leader>l <C-w>l
" -----------------------------------------------------------------------------
" Mover Líneas (Modo Normal y Visual con Alt+J/K)
" -----------------------------------------------------------------------------
nnoremap <A-j> :m .+1<CR>==
nnoremap <A-k> :m .-2<CR>==
vnoremap <A-j> :m '>+1<CR>gv=gv
vnoremap <A-k> :m '<-2<CR>gv=gv

" -----------------------------------------------------------------------------
" Plegado (Folding) - Opcional
" -----------------------------------------------------------------------------
set foldmethod=indent  " Pliega basado en indentación (puedes probar 'syntax')
set foldlevelstart=99  " Empieza con todo desplegado
nnoremap za za         
" Alternar plegado actual
nnoremap zR zR         
" Desplegar todo
nnoremap zM zM         
" Plegar todo

"
"
"
"
"
" -----------------------------------------------------------------------------
" Fin de .ideavimrc
" -----------------------------------------------------------------------------
" Guarda como ~/.ideavimrc y recarga con ':source ~/.ideavimrc'
" ¡Usa ':actionlist [filtro]' para verificar/buscar nombres de acción!
